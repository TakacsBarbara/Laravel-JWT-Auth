name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user with some datas.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: quis
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'The email address of the user (must be unique).'
        required: true
        example: fermin.berge@example.org
        type: email
        enumValues: []
        custom: []
      password:
        name: password
        description: 'required|min:8|regex:/^(?=.*[A-Z])(?=.*\d).+$/ The user''s password.'
        required: false
        example: '&J;~W}3s'
        type: string
        enumValues: []
        custom: []
      phone_number:
        name: phone_number
        description: 'optional The phone number of the user.'
        required: false
        example: fugiat
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: 'optional The address of the user.'
        required: false
        example: accusamus
        type: string
        enumValues: []
        custom: []
      position:
        name: position
        description: 'optional The position of the user.'
        required: false
        example: nesciunt
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: quis
      email: fermin.berge@example.org
      password: '&J;~W}3s'
      phone_number: fugiat
      address: accusamus
      position: nesciunt
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "user": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "phone_number": "1234567890",
                  "address": "123 Main St",
                  "position": "Developer"
              },
              "msg": "User created successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "error": {
                  "email": ["The email field must be unique."],
                  "password": ["The password field does not match the required format."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log in a registered user with email and password.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: lebsack.maddison@example.org
        type: email
        enumValues: []
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: 'i|l$lHwnijs,."OJd.w'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: lebsack.maddison@example.org
      password: 'i|l$lHwnijs,."OJd.w'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "token": "your-access-token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "error": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Could not create token"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get the currently authenticated user's information."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "user": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "phone_number": "1234567890",
                  "address": "123 Main St",
                  "position": "Developer"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fa6cg5aV4h8edv6P13ZEbkD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log out the currently authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "message": "Logged out successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZV4facPeDEv1a36k6bd58gh'
    controller: null
    method: null
    route: null
    custom: []
